package ui;

import utils.Launcher;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Arrays;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * History_Window.java
 *
 * Created on Sep 23, 2010, 2:56:22 AM
 */

/**
 *
 * @author Bandara
 */
public class History_Window extends javax.swing.JFrame {

    /** Creates new form History_Window */
    public History_Window() {

        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        fillTheHistoryList();
        URL url = getClass().getResource("/ico2.png");
        ImageIcon imageIcon = new ImageIcon(url);
        Image image = imageIcon.getImage();  
        this.setIconImage(image);
    }

    private String getFileName(String FullfileName){
        String fName=FullfileName.substring(FullfileName.lastIndexOf(File.separator)+1);
        return fName;
    }

    private void fillTheHistoryList(){
        File histLoc=new File("./Results");
        File[] fileList=histLoc.listFiles();
        //File[] sortedFileList=new File[fileList.length];
        Arrays.sort(fileList, new FileSortx());
        
        DefaultListModel dlm=new DefaultListModel();
        int fCount=0;
        for (File fl : fileList){
            if (fl.isFile()) {
                dlm.addElement(getFileName(fl.toString()));
                fCount++;
            }
        }
        jList1.setModel(dlm);
        jScrollPane1.setViewportView(jList1);
        jLabel1.setText("No Of Files : "+fCount);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("History");

        jButton1.setText("View File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jButton2.setText("Remove Selected");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("No Of Files :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public class FileSortx implements Comparator<File>{

        public int compare(File o1, File o2) {
            if(o1.lastModified()< o2.lastModified()){
                return 1;
            }else if(o1.lastModified() > o2.lastModified()){
                return -1;
            }else{
                return 0;
            }
        }
        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jList1.getSelectedIndex() != -1) {
            try {
                // TODO add your handling code here:
                String fullPath = "Results" + File.separator + jList1.getSelectedValue().toString();
                //java.awt.Desktop.getDesktop().open(new File(fullPath));
                new Launcher().launch(new File(fullPath));
            } catch (Exception ex) {
                Logger.getLogger(History_Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jList1.getSelectedIndex() != -1) {
            String selectedFile = jList1.getSelectedValue().toString();
            File fl = new File("Results" + File.separator + selectedFile);
            boolean isDeleted = fl.delete();
            if (isDeleted) {
                fillTheHistoryList();
            } else {
                JOptionPane.showMessageDialog(null, "Could not delete the file.", "I/O Exception", JOptionPane.ERROR_MESSAGE);
                fillTheHistoryList();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int resp=JOptionPane.showConfirmDialog(null, "This will permenently remove all history files,\n Do you really want to clear the history? ","Clear History" ,JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == JOptionPane.OK_OPTION) {
            File rootHistory = new File("Results" + File.separator);
            File allhistory[] = rootHistory.listFiles();
            for (File fl : allhistory) {
                fl.delete();
                fillTheHistoryList();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
